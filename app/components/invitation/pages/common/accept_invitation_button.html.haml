.contents{ **content_tag_arguments }
  - if invitation.accepted? && !preview_mode
    -# Options after invitation is accepted
    - options = ::Html::TagAttributes.build({ label: t(".add_to_calendar"), size: :small, scheme: :secondary })
    = invitation_button_component(tag: :a, href: calendar_url, **options.to_h)

  - else
    - if preview_mode
      - options = ::Html::TagAttributes.build({ label: t(".accept"), size: :small, scheme: :primary })
      - options = options.with_stimulus_target("beforeAccept", stimulus_identifier)
      - options = options.with_stimulus_action("click", stimulus_identifier, "greetConfirmedGuest")
      = invitation_button_component(**options.to_h)
    - else
      - options = ::Html::TagAttributes.build({}).with_stimulus_target("beforeAccept", stimulus_identifier)
      %div{ options.to_h }
        -# Options before invitation is accepted
        = form_with(model: invitation_state_transition,
                    url: invitation_state_transition_url,
                    method: :post,
                    builder: ComponentFormBuilder,
                    data: { "turbo-frame" => "", action: "turbo:before-fetch-response->#{stimulus_identifier}#markInvitationAsConfirmed" }) do |form|
          = form.hidden_field :event, value: "accept"
          = form.hidden_field :invitation_id, value: @invitation.id

          - options = ::Html::TagAttributes.build({ label: t(".accept"), size: :small, scheme: :primary })
          = invitation_button_component(**options.to_h)

      -# Options after invitation is accepted
    - options = ::Html::TagAttributes.build({ label: t(".add_to_calendar"), size: :small, scheme: :secondary, class: "#{ "hidden opacity-0" unless invitation.accepted? }" })
    - options = options.with_stimulus_target("afterAccept", stimulus_identifier)
    = invitation_button_component(tag: :a, href: calendar_url, **options.to_h)