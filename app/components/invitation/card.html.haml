%div{ content_tag_arguments }
  .relative.flex.flex-row.space-x-16{ class: "border-[1.5px]" }
    -# Left side of card, hidden on phone devices
    %div{ class: "hidden md:block" }
      = render Invitation::Pages::Cover.new(wedding:, guest:)

    -# Right side of card, invitation UI (page navigation happens here)
    .contents{ stimulus_target_option("pageAttachment", self.stimulus_identifier) }
      -# Page Navigation
      - options = ::Html::TagAttributes.build({ class: "absolute flex flex-row items-center gap-6 top-[-90px] right-8" })
      - options = options.with_stimulus_target("menu", Invitation::Envelop.stimulus_identifier)
      %div{ options.to_h }
        - options = ::Html::TagAttributes.build({}).with_stimulus_action("click", Invitation::Card.stimulus_identifier, "navigateTo")

        - welcome_options = options.with_stimulus_parameter("page_name", Invitation::Card.stimulus_identifier, "schedule")
        = render(Common::IconButtonComponent.new(icon: "sparkles", scheme: :secondary, **welcome_options.to_h))

        - schedule_options = options.with_stimulus_parameter("page_name", Invitation::Card.stimulus_identifier, "schedule")
        = render(Common::IconButtonComponent.new(icon: "calendar", scheme: :secondary, **schedule_options.to_h))

        - travel_guide_options = options.with_stimulus_parameter("page_name", Invitation::Card.stimulus_identifier, "schedule")
        = render(Common::IconButtonComponent.new(icon: "globe", scheme: :secondary, **travel_guide_options.to_h))

      -# Renders all pages, each one wrapped in a template with the metadata required
      -# by the +javascript+ +Page+ class to navigate between invitation pages.
      - pages.each do |page|
        - options = stimulus_target_option("pageTemplate", self.stimulus_identifier)
        - options.merge!(data: { page_name: page.page_name })
        %template{ options }
          = render page.new(wedding:, guest:)
